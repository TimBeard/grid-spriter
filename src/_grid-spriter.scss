@use 'sass:list';

// Available modes. Serves as default when no $modes param is provided.
$availableModes: ('is', 'prepend', 'append');

// Helper function to compute relative position of a given cell on any axis
@function onAxis($l, $x) {
  @return if($l > 1, (calc(1 / ($l - 1)) * $x) * 100, 0);
}

// Helper function to compute relative coordinates of a given cell within a grid
@function inGrid($i, $w, $h) {

  $x: onAxis($w, $i % $w);
  $y: onAxis($h, floor(calc($i / $w)));

  @return $x $y;
}

@mixin GridSpriter($src, $set, $col, $row, $def: null, $modes: $availableModes, $type: 'mask') {

  $relWidth: $col * 100%;
  $nbrCells: $col * $row;

  %bgDef-#{$set} {
    #{$type}-image: url($src);
    #{$type}-size: $relWidth auto;
  }

  @for $key from 0 through $nbrCells - 1 {

    @if $def == null or map-has-key($def, $key) {

      $val: if($def != null, map-get($def, $key), $key);
      $position: inGrid($key, $col, $row);

      $x: list.nth($position, 1);
      $y: list.nth($position, 2);

      %position-#{$x}-#{$y} {
        #{$type}-position: if($x > 0, $x * 1%, $x) if($y > 0, $y * 1%, $y);
      }

      @each $mode in $modes {

        @if index($availableModes, $mode) == null {
          @error 'GridSpriter mode is set to #{$mode}. Should be either "is", "prepend" or "append".';
        }

        $className: '.#{$mode}-#{$set}-#{$val}-icon';

        @if $type == 'mask' {
          $className: $className + '-' + $type;
        }

        @if $mode != 'is' {
          $className: $className + if($mode == 'prepend', '::before', '::after');
        }

        #{$className} {
          @extend %bgDef-#{$set};
          @extend %position-#{list.nth($position, 1)}-#{list.nth($position, 2)};
        }
      }
    }
  }
}
